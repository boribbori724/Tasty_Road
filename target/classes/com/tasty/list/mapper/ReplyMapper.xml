<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace="pakage + interface" -->
<mapper namespace="com.tasty.list.mapper.ReplyMapper">
	<!-- 1. 맛집 댓글 리스트 -->
	<!-- id="method" -->
	<!-- map-pageObject-startRow : pageObject.startRow -->
	<!-- map-no : no -->
	<select id="list" resultType="com.tasty.list.vo.ReplyVO">
		select rnum, replyNo, content, id, writeDate
		from
		(
			select rownum rnum, replyNo, content, id, writeDate
			from(
				select replyNo, content, id, writeDate
				from reply
				where shopNo = #{shopNo}
				order by replyNo asc
			)
		)
		where rnum between #{pageObject.startRow} and #{pageObject.endRow}
	</select>
	
	<!-- 1-1. 맛집 댓글 전체 갯수 - 게시판 글번호 필요 -->
	<select id="getTotalRow" resultType="java.lang.Long">
		select count(*) from reply
		where shopNo = #{shopNo}
	</select>
	
	<!-- 2. 맛집 댓글보기 - 생략 : 리스트에 포함 -->
	
	<!-- 3. 맛집 댓글쓰기 -->
	<insert id="write">
		insert into reply(replyNo, content, id, shopNo)
		values(reply_seq.nextval, #{content}, #{id}, #{shopNo})
	</insert>
	
	<!-- 4. 맛집 댓글수정 -->
	<update id="update">
		update reply set content=#{content}
<!-- 		where id = #{id} -->
		where id = #{id} and replyNo = #{replyNo} 
		<!-- replyNo = #{replyNo} and  -->
	</update>
	
	<!-- 5. 게시판 댓글삭제 -->
	<delete id="delete">
		delete from reply
<!-- 		where id = #{id} -->
		where id = #{id} and replyNo = #{replyNo} 
		<!-- replyNo = #{replyNo} and  -->
	</delete>
	
</mapper>